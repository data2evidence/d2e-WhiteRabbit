name: Docker Build Push
run-name: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}

on:
  pull_request:
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      GIT_REPO_FULL_NAME:
        description: Select RepoName
        required: false
        type: choice
        options:
          - alp-os/alp-WhiteRabbit
      GIT_BRANCH_NAME:
        default: master
        description: Enter BranchName
        required: true
        type: string

# Run only one job per branch
concurrency:
  group: ${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}-${{ github.event_name }}-docker-build
  cancel-in-progress: ${{ (github.head_ref || github.ref_name) != 'master' }} # except for master branch

jobs:
  bld:
    runs-on: ubuntu-latest
    timeout-minutes: 1440
    env:
      AZ_REG_FQDN: ${{ vars.AZ_REGISTRY_NAME }}.azurecr.io
      AZ_REG_NAME: ${{ vars.AZ_REGISTRY_NAME }}
      AZ_REG_PASSWORD: ${{ secrets.AZ_REGISTRY_PASSWORD }}
      AZ_REG_PRUNE_DAYS: ${{ vars.AZ_REG_PRUNE_DAYS || '20' }}
      AZ_REG_PRUNE_ENABLE_DELETE: ${{ vars.AZ_REG_PRUNE_ENABLE_DELETE || 'false' }}
      AZ_REG_PRUNE_FORCE_ANALYZE: ${{ vars.AZ_REG_PRUNE_FORCE_ANALYZE || 'false' }}
      AZ_REG_PRUNE_KEEP_REGEX: ${{ vars.AZ_REG_PRUNE_KEEP_REGEX }}
      AZ_REG_USERNAME: ${{ vars.AZ_REGISTRY_USERNAME }}
      DOCKER_BUILD_DISABLE: ${{ vars.DOCKER_BUILD_DISABLE || 'false' }}
      DOCKER_BUILD_PUSH_BOOL_OVERRIDE: ${{ vars.DOCKER_BUILD_PUSH_BOOL_OVERRIDE || 'false' }}
      GIT_BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      GIT_REPO_FULL_NAME: ${{ github.event.inputs.GIT_REPO_FULL_NAME || github.event.pull_request.head.repo.full_name || github.event.repository.full_name }} # workflow_dispatch || pull_request || push

    strategy:
      fail-fast: false
      matrix:
        include:
          - AZ_REG_REPOSITORY: alp-data-node/alp-perseus-white-rabbit
            DOCKER_BUILD_CONTEXT_PATH: .
            DOCKER_BUILD_FILE_PATH: ./Dockerfile

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_BRANCH_NAME }}
          repository: ${{ env.GIT_REPO_FULL_NAME }}

      - name: setup
        id: setup
        env:
          DOCKER_BUILD_PUSH_BOOL_OVERRIDE: ${{ vars.DOCKER_BUILD_PUSH_BOOL_OVERRIDE || false }}
        run: |
          DOCKER_BUILD_PUSH_BOOL_STR=false
          if [ $DOCKER_BUILD_PUSH_BOOL_OVERRIDE = "true" ] || [ $GITHUB_EVENT_NAME = "workflow_dispatch" ] || [ $GIT_BRANCH_NAME = 'master' ]; then
            DOCKER_BUILD_PUSH_BOOL_STR=true
          fi

          echo "DOCKER_BUILD_PLATFORMS=linux/amd64" | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo "DOCKER_BUILD_PUSH_BOOL_STR=$DOCKER_BUILD_PUSH_BOOL_STR" | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

          echo AZ_REG_REPOSITORY=${{ matrix.AZ_REG_REPOSITORY }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo DOCKER_BUILD_CONTEXT_PATH=${{ matrix.DOCKER_BUILD_CONTEXT_PATH }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY
          echo DOCKER_BUILD_FILE_PATH=${{ matrix.DOCKER_BUILD_FILE_PATH }} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZ_REG_FQDN }}
          username: ${{ env.AZ_REG_USERNAME }}
          password: ${{ env.AZ_REG_PASSWORD }}

      - uses: docker/setup-qemu-action@v3
        if: env.DOCKER_BUILD_DISABLE == 'false'

      - name: Set up Docker Buildx
        if: env.DOCKER_BUILD_DISABLE == 'false'
        uses: docker/setup-buildx-action@v3
        id: builder

      - name: Build and push
        uses: docker/build-push-action@v6
        if: env.DOCKER_BUILD_DISABLE == 'false'
        id: build_push
        continue-on-error: false
        with:
          builder: ${{ steps.builder.outputs.name }}
          context: ${{ matrix.DOCKER_BUILD_CONTEXT_PATH }}
          file: ${{ matrix.DOCKER_BUILD_FILE_PATH }}
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}
          push: ${{ env.DOCKER_BUILD_PUSH_BOOL_STR }}
          tags: ${{ env.AZ_REG_FQDN }}/${{ matrix.AZ_REG_REPOSITORY }}:${{ github.event.inputs.GIT_BRANCH_NAME || github.head_ref || github.ref_name }}
          build-args: |
            GIT_COMMIT_ARG=${{ github.sha }}

      - name: Prune ACR Images created before vars.AZ_REG_PRUNE_DAYS_TAGGED
        if: env.AZ_REG_PRUNE_FORCE_ANALYZE == 'true' || env.GIT_BRANCH_NAME == 'master'
        id: prune
        continue-on-error: true
        run: |
          npx --suppess-warnings zx scripts/analyze-acr.mjs
          if [ $AZ_REG_PRUNE_ENABLE_DELETE = true ]; then
            echo "INFO . manifests delete ..."
            sh "private-acr-manifests-delete.sh"
          else
            echo "INFO . manifests delete skipped"
          fi
          echo AZ_REG_ARTIFACTS_NAME=${AZ_REG_REPOSITORY/\//--} | tee -a $GITHUB_ENV | tee -a $GITHUB_OUTPUT | tee -a $GITHUB_STEP_SUMMARY

      - name: Upload ACR manifests artifacts
        if: steps.prune.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.AZ_REG_ARTIFACTS_NAME }}
          retention-days: 30
          path: |
            private*manifests*
